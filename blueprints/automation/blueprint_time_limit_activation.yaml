blueprint:
  name: Time Limit Activation
  description: Start a timer when entity is turned on and turn off when completes
  domain: automation
  input:
    switch:
      name: Switch
      description: The boiler switch to control
      selector:
        entity:
          domain: switch
    timer:
      name: Timer
      description: The timer to keep track of the duration
      selector:
        entity:
          domain: timer
    max_limit:
      name: Maximum Limit
      description: The maximum duration of the on cycle
      selector:
        entity:
          domain: input_number
mode: restart
max_exceeded: silent
variables:
  timer: !input timer
  max_limit: !input max_limit
trigger: 
  platform: state
  entity_id: !input switch
  to: "on"
condition:
  - not:
      - condition: state # Do not start a schedule if the boiler was already turned on manually
        entity_id: !input timer
        state: "active"
action:
  - service: timer.start
    data:
      entity_id: !input timer
      duration:
        minutes: "{{ states(max_limit) | int }}"
  - wait_template: "{{ is_state(timer, 'idle' ) }}"
  - service: switch.turn_off
    entity_id: !input switch
