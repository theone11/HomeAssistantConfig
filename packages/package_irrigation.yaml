#####################################
########## E N T I T I E S ##########
#####################################

sensor:
  - platform: template
    sensors:
      irrigation_sprinkler_west_problem:
        icon_template: mdi:sprinkler
        value_template: >
          {% if has_value('switch.irrigation_sprinkler_west') %}
            {{ 0 }}
          {% else %}
            {{ 1 }}
          {% endif %}
      irrigation_sprinkler_north_problem:
        icon_template: mdi:sprinkler
        value_template: >
          {% if has_value('switch.irrigation_sprinkler_north') %}
            {{ 0 }}
          {% else %}
            {{ 1 }}
          {% endif %}
      irrigation_drips_problem:
        icon_template: mdi:water
        value_template: >
          {% if has_value('switch.irrigation_drips') %}
            {{ 0 }}
          {% else %}
            {{ 1 }}
          {% endif %}

group:
  irrigation: # Used for UI button
    name: Irrigation Valves
    icon: mdi:sprinkler
    all: false
    entities:
      - switch.irrigation_sprinkler_west
      - switch.irrigation_sprinkler_north
      - switch.irrigation_drips

input_number:
  irrigation_set_time:
    name: Duration
    unit_of_measurement: "sec"
    initial: 900
    min: 60
    max: 1800
    step: 60

input_boolean:
  irrigation_sprinkler_north:
    name: North Sprinklers
    icon: mdi:sprinkler
  irrigation_sprinkler_west:
    name: West Sprinklers
    icon: mdi:sprinkler
  irrigation_drips:
    name: Drips
    icon: mdi:water
  irrigation_immediate:
    name: Irrigation Immediate
    icon: mdi:power
  irrigation_one_time:
    name: Irrigation One Time
    icon: mdi:timer-outline

timer:
  # irrigation_timer_cycle_duration:
  #   name: Time Left
  #   icon: mdi:timer-outline
  irrigation_sprinkler_north: # For schedulers
    # name: Time Left
    icon: mdi:timer-outline
  irrigation_sprinkler_west: # For schedulers
    # name: Time Left
    icon: mdi:timer-outline
  irrigation_drips: # For schedulers
    # name: Time Left
    icon: mdi:timer-outline

input_datetime:
  irrigation_start_time:
    name: Start Time
    has_time: true
    has_date: false

###########################################
########## A U T O M A T I O N S ##########
###########################################

automation:
  # Trigger    - HA initializing
  # Conditions - NONE
  # Actions    - Turn off all irrigation valves (in case HA restart during a watering cycle)
  - alias: Irrigataion Initialization
    description: Update enitity values upon HA start
    trigger:
      - event: start
        platform: homeassistant
    condition: []
    action:
      - entity_id: switch.irrigation_sprinkler_west
        service: switch.turn_off
      - entity_id: switch.irrigation_sprinkler_north
        service: switch.turn_off
      - entity_id: switch.irrigation_drips
        service: switch.turn_off

  # Trigger - Turning ON Immediate Switch
  # Conditions - NONE
  # Actions
  - alias: Irrigation 1-Time Immediate Start Cycle
    description: "Irrigation 1-Time Immediate Start Cycle"
    trigger:
      - platform: state
        entity_id: input_boolean.irrigation_immediate
        from: "off"
        to: "on"
    condition: []
    action:
      - service: notify.file_debug
        data:
          message: "Starting 1-Time Immediate start_irrigation_cycle script #"
      - service: script.turn_on
        entity_id: script.start_irrigation_cycle
      - delay: "00:00:01"
      - wait_template: "{{ is_state('script.start_irrigation_cycle', 'off') }}"
      - service: notify.file_debug
        data:
          message: "Completed 1-Time Immediate start_irrigation_cycle script #"

  # Trigger - Turning ON Timer Scheduled Switch
  # Conditions - NONE
  # Actions
  - alias: Irrigation 1-Time Scheduled Start Cycle
    description: "Irrigation 1-Time Scheduled Start Cycle"
    trigger:
      - platform: time
        at: input_datetime.irrigation_start_time
    condition:
      condition: state
      entity_id: input_boolean.irrigation_one_time
      state: "on"
    action:
      - service: notify.file_debug
        data:
          message: "Starting 1-Time Scheduled start_irrigation_cycle script #"
      - service: script.turn_on
        entity_id: script.start_irrigation_cycle
      - delay: "00:00:01"
      - wait_template: "{{ is_state('script.start_irrigation_cycle', 'off') }}"
      - service: notify.file_debug
        data:
          message: "Completed 1-Time Scheduled start_irrigation_cycle script #"

  # Trigger - Turning OFF Timer Start/Stop Switch
  # Conditions - NONE
  # Actions
  #         - Run stop script with parameter all irrigation valves control entities
  - alias: Irrigation Stop Cycle
    description: "Irrigation Stop Cycle"
    trigger:
      - platform: state
        entity_id: input_boolean.irrigation_immediate
        to: "off"
      - platform: state
        entity_id: input_boolean.irrigation_one_time
        to: "off"
    condition: []
    action:
      - service: notify.file_debug
        data:
          message: "stop_irrigation_cycle - Initiated"
      - service: script.turn_off
        entity_id: script.start_irrigation_cycle
      - service: input_boolean.turn_off
        entity_id: input_boolean.irrigation_immediate
      - service: input_boolean.turn_off
        entity_id: input_boolean.irrigation_one_time
      - repeat:
          for_each:
            - "irrigation_sprinkler_west"
            - "irrigation_sprinkler_north"
            - "irrigation_drips"
          sequence:
            - service: timer.cancel
              target:
                entity_id: "timer.{{ repeat.item }}"
            - service: switch.turn_off
              target:
                entity_id: "switch.{{ repeat.item }}"
      - service: notify.file_debug
        data:
          message: "stop_irrigation_cycle - Completed"

###################################
########## S C R I P T S ##########
###################################

script:
  # ---------------------
  start_irrigation_cycle:
    mode: restart
    sequence:
      - repeat:
          for_each:
            - "irrigation_sprinkler_west"
            - "irrigation_sprinkler_north"
            - "irrigation_drips"
          sequence:
            - if:
                - condition: template
                  value_template: "{{ is_state('input_boolean.' ~ repeat.item, 'on') }}"
              then:
                - service: switch.turn_on
                  target:
                    entity_id: "switch.{{ repeat.item }}"
                - service: notify.file_debug
                  data:
                    message: "cycle_irrigation_valve {{ repeat.item }} - Turned ON #"
                - service: timer.start
                  target:
                    entity_id: "timer.{{ repeat.item }}"
                  data:
                    duration: "{{ states('input_number.irrigation_set_time') | int | timestamp_custom('%H:%M:%S',False) }}"
                - wait_template: "{{ is_state('timer.' ~ repeat.item, 'idle' ) }}"
                - service: switch.turn_off
                  target:
                    entity_id: "switch.{{ repeat.item }}"
                - service: notify.file_debug
                  data:
                    message: "cycle_irrigation_valve {{ repeat.item }} - Turned OFF #"
      - service: input_boolean.turn_off
        entity_id: input_boolean.irrigation_immediate
      - service: input_boolean.turn_off
        entity_id: input_boolean.irrigation_one_time
