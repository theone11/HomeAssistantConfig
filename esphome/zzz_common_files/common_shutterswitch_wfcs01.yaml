substitutions:
  platform: ESP8266
  board: esp01_1m
  esp8266_restore_from_flash: "TRUE" # "TRUE" / "FALSE" !!! Make sure that all switches, lights, fans, globals, etc... are set to ALWAYS_ON/OFF to minimize flash write cycles

##############################################################
#   WF-CS01 Curtain Switch
##############################################################
#
#   * Numbers are GPIO#
#
#          | OPEN | STOP | CLOSE            Green LED - 00
#   ----------------------------            Blue LED  - 01
#   Button |  12  |  03  |  05              ! unknown - 04
#   ----------------------------
#   LED    |  16  |  14  |  02
#   ----------------------------
#   Relay  |  13  |  --  |  15
#
#   Closed =   0%
#   Open   = 100%
#
##############################################################

status_led:
  pin:
    number: GPIO00
    inverted: False


binary_sensor:

  - platform: gpio
    id: button_open
    internal: TRUE
    pin:
      number: GPIO12
      inverted: TRUE
      mode: INPUT_PULLUP
    filters:
      - delayed_on: 50ms
    on_press:
      - cover.open: this_cover
    on_double_click:
      min_length: 50ms
      max_length: 500ms
      then:
        - cover.control:
            id: this_cover
            position: 50%
        - switch.turn_on: open_led
        - delay: 0.5s
        - switch.turn_off: open_led
        - delay: 0.5s
        - switch.turn_on: open_led
        - delay: 0.5s
        - switch.turn_off: open_led

  - platform: gpio
    id: button_stop
    internal: TRUE
    pin:
      number: GPIO03
      inverted: TRUE
      mode: INPUT_PULLUP
    filters:
      - delayed_on: 50ms
    on_press:
      - cover.stop: this_cover
    on_click:
    - min_length: ${blue_led_hold_min}s
      max_length: ${blue_led_hold_max}s
      then:
        - switch.toggle: blue_led
    - min_length: ${reset_hold_min}s
      max_length: ${reset_hold_max}s
      then:
        - switch.turn_on: restart_device

  - platform: gpio
    id: button_close
    internal: TRUE
    pin:
      number: GPIO5
      inverted: TRUE
      mode: INPUT_PULLUP
    filters:
      - delayed_on: 50ms
    on_press:
      - cover.close: this_cover
    on_double_click:
      min_length: 50ms
      max_length: 500ms
      then:
        - cover.control:
            id: this_cover
            position: 50%
        - switch.turn_on: close_led
        - delay: 0.5s
        - switch.turn_off: close_led
        - delay: 0.5s
        - switch.turn_on: close_led
        - delay: 0.5s
        - switch.turn_off: close_led

  # - platform: gpio
  #   pin: GPIO04
  #   internal: TRUE


switch:

  - platform: gpio
    pin: GPIO01
    id: blue_led
    internal: TRUE
    restore_mode: RESTORE_DEFAULT_OFF

  - platform: gpio
    pin: GPIO16
    id: open_led
    internal: TRUE
    restore_mode: ALWAYS_OFF

  - platform: gpio
    pin: GPIO14
    id: stop_led
    internal: TRUE
    restore_mode: ALWAYS_OFF

  - platform: gpio
    pin: GPIO2
    id: close_led
    internal: TRUE
    restore_mode: ALWAYS_OFF

  # - platform: gpio
  #   pin: GPIO04
  #   name: "${friendly_name} GPIO04"
  #   internal: TRUE
  #   restore_mode: ALWAYS_OFF

  - platform: gpio
    pin: GPIO13
    id: open_relay_l1
    internal: TRUE
    interlock: &interlock_group [open_relay_l1, close_relay_l3]
    interlock_wait_time: 250ms
    restore_mode: ALWAYS_OFF

  - platform: gpio
    pin: GPIO15
    id: close_relay_l3
    internal: TRUE
    interlock: *interlock_group
    interlock_wait_time: 250ms
    restore_mode: ALWAYS_OFF

    
cover:
  - platform: time_based
    name: "${friendly_name}"
    id: "this_cover"
    device_class: shutter
    assumed_state: false
    open_action:
      - switch.turn_off: close_led
      - switch.turn_off: stop_led
      - switch.turn_on: open_relay_l1
      - switch.turn_on: open_led
      - delay: 1s
      - switch.turn_off: open_led
    open_duration: ${duration_open}s
    close_action:
      - switch.turn_off: open_led
      - switch.turn_off: stop_led
      - switch.turn_on: close_relay_l3
      - switch.turn_on: close_led
      - delay: 1s
      - switch.turn_off: close_led
    close_duration: ${duration_close}s
    stop_action:
      - switch.turn_off: open_relay_l1
      - switch.turn_off: close_relay_l3
      - switch.turn_off: close_led
      - switch.turn_off: open_led
      - switch.turn_on: stop_led
      - delay: 1s
      - switch.turn_off: stop_led
