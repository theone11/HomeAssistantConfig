substitutions:
  platform: ESP8266
  board: esp01_1m
  esp8266_restore_from_flash: "FALSE" # "TRUE" / "FALSE" !!! Make sure that all switches, lights, fans, globals, etc... are set to ALWAYS_ON/OFF to minimize flash write cycles

##############################################################
#   WH100W-EU Boiler Switch
#   * Replaced Realtek WR3E chip with ESP-12S
##############################################################
#
#   * Numbers are GPIO#
#
#          | Switch |            Orange LED - 00
#   -----------------
#   Button |   12   |
#   -----------------
#   LED    |   05   |
#   -----------------
#   Relay  |   13   |
#
##############################################################

packages:
  platform: !include platform_esp8266.yaml


status_led:
  pin:
    number: GPIO00
    inverted: False


binary_sensor:

  - platform: gpio
    id: button
    name: "${friendly_name} Button"
    internal: TRUE
    pin:
      number: GPIO12
      inverted: TRUE
      mode: INPUT_PULLUP
    filters:
      - delayed_on: 50ms
    on_press:
      - switch.toggle: heater
    on_click:
    # - min_length: ${blue_led_hold_min}s
    #   max_length: ${blue_led_hold_max}s
    #   then:
    #     - switch.toggle: blue_led
    - min_length: ${reset_hold_min}s
      max_length: ${reset_hold_max}s
      then:
        - switch.turn_on: restart_device


switch:

  - platform: gpio
    id: button_led
    name: "${friendly_name} LED"
    internal: true
    pin:
      number: GPIO05
      inverted: TRUE
    restore_mode: ALWAYS_OFF

  - platform: gpio
    id: heater
    name: "${friendly_name}"
    restore_mode: ALWAYS_OFF
    pin: GPIO13
    icon: mdi:radiator
    on_turn_on:
    - script.execute: heater_timer
    on_turn_off:
    - switch.turn_off: button_led

script:
  - id: heater_timer
    mode: restart     # Restart script when called
    then:
      - switch.turn_on: button_led
      - delay: ${max_duration_on}
      - switch.turn_off: heater
